name: "CodeQL"

on:
  push:
    branches: 
      - "main"
      - "Principal"
  pull_request:
  schedule:
    - cron: '44 11 * * 3'
    - cron: '0 0 * * 0'

permissions:
  contents: write
  pull-requests: write

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby', 'swift']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

    - name: Configurar el entorno Node.js
      uses: actions/setup-node@v4.0.0
      with:
        autenticación siempre: false
        versión-nodo: 
        archivo-versión-nodo: 
        arquitectura: 
        comprobar lo último: false
        URL de registro: 
        alcance: 
        token: ${{ github.server_url == 'https://github.com' && github.token || '' }}
        caché: 
        ruta-dependencia-caché:

    - name: Configurar Java JDK
      uses: actions/setup-java@v3.13.0
      with:
        versión java: 
        archivo-versión-java: 
        distribución: 
        paquete java: 'jdk'
        arquitectura: 
        Archivo jdk: 
        comprobar lo último: false
        ID del servidor: 'github'
        nombre de usuario del servidor: 'GITHUB_ACTOR'
        contraseña del servidor: 'GITHUB_TOKEN'
        ruta-configuración: '~/.m2'
        configuración de sobrescritura: true
        gpg-clave-privada: 
        frase de contraseña gpg: 
        caché: 
        estado del trabajo: ${{ job.status }}
        token: ${{ github.server_url == 'https://github.com' && github.token || '' }}
        mvn-toolchain-id: 
        proveedor-mvn-toolchain: 

    # Begin AppMap CI language agent installation
    - name: Install AppMap tools
      id: install-appmap
      uses: getappmap/install-action@v1
      with:
        project-type: gradle
    - name: Run tests
      run: ./gradlew appmap test
    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        message: "ci: Add AppMap language agent and appmap.yml"
    # End AppMap CI language agent installation